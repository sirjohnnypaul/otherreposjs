
let colorByLabel = {
    'blue-ish': [],
    'green-ish': [],
    'pink-ish': [],
    'grey-ish': [],
    'red-ish': [],
    'purple-ish': [],
    'brown-ish': [],
    'orange-ish': [],
    'yellow-ish': [],
  }
  
  //definition for type to display in visualising by color function
  let label = 'blue-ish';
  
  
  function setup() {
    createCanvas(600, 600);
  
  
    // Initialize Firebase

    //this one is mine, but it's generated by one user so i'm gonna use conding train fireabase
    var config = {
        apiKey: "AIzaSyDPekCKX4ee6h9NVR2lEITGAM0XIHn-c7c",
        authDomain: "color-classification.firebaseapp.com",
        databaseURL: "https://color-classification.firebaseio.com",
        projectId: "color-classification",
        storageBucket: "",
        messagingSenderId: "590040209608"
      };
    // var config = {
    //     apiKey: "AIzaSyCnU7e2eAm0Fg8DffIP3c66T5W7ADkLOMY",
    //     authDomain: "color-classification-57b5e.firebaseapp.com",
    //     databaseURL: "https://color-classification-57b5e.firebaseio.com",
    //     projectId: "color-classification-57b5e",
    //     storageBucket: "",
    //     messagingSenderId: "30629591278"
    // };
    firebase.initializeApp(config);
    database = firebase.database();
    let ref = database.ref('colors');
    ref.once('value', gotData); //, errorData);

  }
  
  function gotData(results) {
    let data = results.val();
  
    // Processing data
    let keys = Object.keys(data);
    console.log(keys.length);
  
    //variable is used for sorthing throud faulty users 'color data by user'
    let userData = [];
  
    for (let key of keys) {
      let record = data[key];
      let col = color(record.r, record.g, record.b);
      colorByLabel[record.label].push(record);
    }
  
    //possible noisy users
    //BeriXSWj1LbzWMOoHYbYgfw4SGA3
    //YGdqOTDDmrbGm80gM5UHicxMBgS2
    //HUXmyv1dSSUnIvYk976MPWUSaTG2

    //Visualizing Data by Color Label
    let blues = colorByLabel[label];
    let x = 0;
    let y = 0;
    for (let i = 0; i < blues.length; i++) {
      noStroke();
      fill(blues[i].r, blues[i].g, blues[i].b);
      rect(x,y,10,10);
      x += 10;
      if (x >= width) {
        x = 0;
        y += 10;
      }
    }
  }


  
  //what happens when we click on separate rectangle of color, 
  //we can access uid and detect who is making noise
  function mousePressed() {
    let i = floor(mouseX / 10);
    let j = floor(mouseY / 10);
    let index = i + j * (width / 10);
    let data = colorByLabel[label];
    console.log(data[index])
}